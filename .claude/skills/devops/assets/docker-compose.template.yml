# Docker Compose for SyncKairos v2.0 Local Development
#
# Usage:
#   docker-compose up           # Start all services
#   docker-compose up -d        # Start in detached mode
#   docker-compose down         # Stop all services
#   docker-compose logs -f      # View logs
#   docker-compose ps           # View running services

version: '3.8'

services:
  # =============================================================================
  # SyncKairos Application (optional - for full containerized setup)
  # =============================================================================
  synckairos:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: synckairos-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/synckairos
      - JWT_SECRET=development-jwt-secret-change-in-production
      - LOG_LEVEL=info
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    networks:
      - synckairos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      start_period: 40s
      retries: 3

  # =============================================================================
  # Redis - Primary State Store
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: synckairos-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - synckairos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    # Recommended for development - use noeviction for state storage
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy noeviction

  # =============================================================================
  # PostgreSQL - Audit Store
  # =============================================================================
  postgres:
    image: postgres:15-alpine
    container_name: synckairos-postgres
    ports:
      - "5433:5432"  # Using 5433 externally to avoid conflict with local PostgreSQL
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=synckairos
    volumes:
      - postgres-data:/var/lib/postgresql/data
      # Optionally mount migrations for auto-initialization
      # - ./migrations:/docker-entrypoint-initdb.d:ro
    networks:
      - synckairos-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 3

# =============================================================================
# Networks
# =============================================================================
networks:
  synckairos-network:
    driver: bridge

# =============================================================================
# Volumes (Persistent Data)
# =============================================================================
volumes:
  redis-data:
    driver: local
  postgres-data:
    driver: local
